// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String?  @unique
  walletBalance Float   @default(0)
  bannedUntil  DateTime?
  offers       Offer[]
  transactions Transaction[]
  notifications Notification[]
  tradeUrl     String?
}

model Offer {
  id         String   @id @default(cuid())
  sellerId   String
  seller     User     @relation(fields: [sellerId], references: [id])
  itemId     String
  price      Float
  status     OfferStatus @default(AVAILABLE)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  expiresAt  DateTime?

  transaction Transaction?
}

model Transaction {
  id            String   @id @default(cuid())
  offerId       String   @unique
  buyerId       String
  buyer         User     @relation(fields: [buyerId], references: [id])
  offer         Offer    @relation(fields: [offerId], references: [id])
  escrowAmount  Float
  startedAt     DateTime @default(now())
  completedAt   DateTime?
  cancelledAt   DateTime?
  status        TransactionStatus @default(WAITING_TRADE)
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  type      NotificationType
  message   String
  createdAt DateTime @default(now())
}

enum OfferStatus {
  AVAILABLE
  PENDING_TRADE_OFFER
  COMPLETED
  EXPIRED
}

enum TransactionStatus {
  WAITING_TRADE
  DONE
  REFUSED
  EXPIRED
  REFUNDED_PENALTY
}

enum NotificationType {
  REMINDER
  PENALTY
  CONFIRM
}
